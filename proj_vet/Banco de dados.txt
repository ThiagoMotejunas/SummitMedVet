Bulário: 
CREATE TABLE IF NOT EXISTS public.bulario
(
    id integer NOT NULL DEFAULT nextval('bulario_id_seq'::regclass),
    nome_comercial character varying(100) COLLATE pg_catalog."default" NOT NULL,
    nome_cientifico character varying(100) COLLATE pg_catalog."default" NOT NULL,
    dosagem_geral double precision NOT NULL,
    dosagem_doenca double precision NOT NULL,
    doencas_relacionadas character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT bulario_pkey PRIMARY KEY (id)


Usuários:
CREATE TABLE IF NOT EXISTS public.usuarios
(
    id integer NOT NULL DEFAULT nextval('"Usuarios_id_seq"'::regclass),
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(120) COLLATE pg_catalog."default" NOT NULL,
    senha character varying(200) COLLATE pg_catalog."default" NOT NULL,
    cargo integer NOT NULL,
    CONSTRAINT "Usuarios_pkey" PRIMARY KEY (id),
    CONSTRAINT "Usuarios_email_key" UNIQUE (email)
)

Palestras: 
CREATE TABLE IF NOT EXISTS public.palestras
(
    id integer NOT NULL DEFAULT nextval('palestras_id_seq'::regclass),
    title character varying(200) COLLATE pg_catalog."default" NOT NULL,
    date date NOT NULL,
    descricao text COLLATE pg_catalog."default",
    CONSTRAINT palestras_pkey PRIMARY KEY (id)
)


Inscrição: 
CREATE TABLE IF NOT EXISTS public.inscricoes
(
    id integer NOT NULL DEFAULT nextval('inscricoes_id_seq'::regclass),
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(120) COLLATE pg_catalog."default" NOT NULL,
    palestra_id integer,
    CONSTRAINT inscricoes_pkey PRIMARY KEY (id),
    CONSTRAINT inscricoes_palestra_id_fkey FOREIGN KEY (palestra_id)
        REFERENCES public.palestras (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
